import random
import requests
from bs4 import BeautifulSoup
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import asyncio

TOKEN = "7980357006:AAH8jc9_f29f-KD6PmZgT6g5xDzIlFeXv-Q"  # –¢–æ–∫–µ–Ω —Å—é–¥–∞

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ò–≥—Ä—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∏—â–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
GAMES = {
    "genshin": "https://playerok.com/games/genshin-impact/coins",
    "steam": "https://playerok.com/apps/steam/top-up",
    "pubg": "https://playerok.com/mobile-games/pubg-mobile/coins",
    "freefire": "https://playerok.com/mobile-games/free-fire/coins",
}

# –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
CACHED_ITEMS = {}

# –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
def get_popular_items(game):
    url = GAMES.get(game)
    if not url:
        return "‚ùå –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    response = requests.get(url, headers=headers)
    if response.status_code != 200:
        return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö."
    
    soup = BeautifulSoup(response.text, "html.parser")
    items = []
    
    for item in soup.find_all("div", class_="product-card"):  # –ö–ª–∞—Å—Å –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
        try:
            name = item.find("h3").text.strip()
            orders = int(item.find("span", class_="orders-count").text.strip().split()[0])
            price = float(item.find("span", class_="price").text.strip().replace("‚ÇΩ", ""))
            link = item.find("a")["href"]
            
            if orders < 5:
                status = "üö´ –ù–µ –ª–∏–∫–≤–∏–¥ (–º–∞–ª–æ –∑–∞–∫–∞–∑–æ–≤)"
            else:
                price_competitive = price + random.randint(2, 5)
                status = f"‚úÖ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è —Ü–µ–Ω–∞: {price_competitive}‚ÇΩ"
            
            items.append({
                "name": name,
                "orders": orders,
                "price": price,
                "link": "https://playerok.com" + link,
                "status": status
            })
        except AttributeError:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
    
    return items

# –§–æ–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
async def update_cache():
    global CACHED_ITEMS
    while True:
        for game in GAMES.keys():
            CACHED_ITEMS[game] = get_popular_items(game)
        await asyncio.sleep(300)  # 5 –º–∏–Ω—É—Ç

# –ö–æ–º–∞–Ω–¥–∞ /popular –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler(commands=["popular"])
async def send_popular_items(message: types.Message):
    args = message.text.split()
    if len(args) < 2:
        await message.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–≥—Ä—É! –ù–∞–ø—Ä–∏–º–µ—Ä: /popular pubg")
        return
    
    game = args[1].lower()
    items = CACHED_ITEMS.get(game, "‚ùå –î–∞–Ω–Ω—ã–µ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    if isinstance(items, str):
        await message.reply(items)
        return
    
    response = f"üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ {game.capitalize()}:\n\n"
    for item in items[:5]:  # –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-5
        response += f"üîπ {item['name']}\nüí∞ –¶–µ–Ω–∞: {item['price']}‚ÇΩ\nüì¶ –ó–∞–∫–∞–∑—ã: {item['orders']}\n{item['status']}\nüîó [–°—Å—ã–ª–∫–∞]({item['link']})\n\n"
    
    await message.reply(response, parse_mode="Markdown")

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(update_cache())
    executor.start_polling(dp, skip_updates=True)
input("–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏...")  # –î–æ–±–∞–≤—å —ç—Ç—É —Å—Ç—Ä–æ—á–∫—É –≤ –∫–æ–Ω—Ü–µ –∫–æ–¥–∞